{"ast":null,"code":"import { Buffer } from \"buffer\";\nconst CLIENT_ID = \"79f742e2bb194cc2b9756caebc221c22\";\nconst CLIENT_SECRET = \"344f257c69ba40458b8780bb44eb14ce\";\nconst REDIRECT_URI = \"http://localhost:3000/callback\";\nconst SCOPES = [\"user-read-private\", \"user-read-email\", \"user-top-read\", \"playlist-read-private\", \"playlist-modify-public\", \"playlist-modify-private\", \"user-library-read\", \"user-library-modify\"];\nexport const getAuthUrl = () => {\n  return \"https://accounts.spotify.com/authorize?\" + `client_id=${CLIENT_ID}&` + `response_type=code&` + `redirect_uri=${encodeURIComponent(REDIRECT_URI)}&` + `scope=${encodeURIComponent(SCOPES.join(\" \"))}`;\n};\nexport const getAccessToken = async code => {\n  try {\n    const response = await fetch(\"https://accounts.spotify.com/api/token\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        Authorization: \"Basic \" + Buffer.from(CLIENT_ID + \":\" + CLIENT_SECRET).toString(\"base64\")\n      },\n      body: `grant_type=authorization_code&code=${code}&redirect_uri=${encodeURIComponent(REDIRECT_URI)}`\n    });\n    if (!response.ok) {\n      const errorDetails = await response.json();\n      console.error(\"Error fetching access token:\", errorDetails);\n      throw new Error(\"Failed to retrieve access token\");\n    }\n    const data = await response.json();\n    return data.access_token;\n  } catch (error) {\n    console.error(\"Error getting access token:\", error);\n    throw error;\n  }\n};\nexport const fetchFromSpotify = async (endpoint, token) => {\n  const response = await fetch(`https://api.spotify.com/v1${endpoint}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.json();\n};","map":{"version":3,"names":["Buffer","CLIENT_ID","CLIENT_SECRET","REDIRECT_URI","SCOPES","getAuthUrl","encodeURIComponent","join","getAccessToken","code","response","fetch","method","headers","Authorization","from","toString","body","ok","errorDetails","json","console","error","Error","data","access_token","fetchFromSpotify","endpoint","token"],"sources":["C:/Users/gael1/OneDrive/Desktop/spotify/spotify-stats/src/spotifyAuth.js"],"sourcesContent":["import { Buffer } from \"buffer\";\r\n\r\nconst CLIENT_ID = \"79f742e2bb194cc2b9756caebc221c22\";\r\nconst CLIENT_SECRET = \"344f257c69ba40458b8780bb44eb14ce\";\r\nconst REDIRECT_URI = \"http://localhost:3000/callback\";\r\nconst SCOPES = [\r\n  \"user-read-private\",\r\n  \"user-read-email\",\r\n  \"user-top-read\",\r\n  \"playlist-read-private\",\r\n  \"playlist-modify-public\",\r\n  \"playlist-modify-private\",\r\n  \"user-library-read\",\r\n  \"user-library-modify\",\r\n];\r\n\r\nexport const getAuthUrl = () => {\r\n  return (\r\n    \"https://accounts.spotify.com/authorize?\" +\r\n    `client_id=${CLIENT_ID}&` +\r\n    `response_type=code&` +\r\n    `redirect_uri=${encodeURIComponent(REDIRECT_URI)}&` +\r\n    `scope=${encodeURIComponent(SCOPES.join(\" \"))}`\r\n  );\r\n};\r\n\r\nexport const getAccessToken = async (code) => {\r\n  try {\r\n    const response = await fetch(\"https://accounts.spotify.com/api/token\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        Authorization:\r\n          \"Basic \" +\r\n          Buffer.from(CLIENT_ID + \":\" + CLIENT_SECRET).toString(\"base64\"),\r\n      },\r\n      body: `grant_type=authorization_code&code=${code}&redirect_uri=${encodeURIComponent(\r\n        REDIRECT_URI\r\n      )}`,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorDetails = await response.json();\r\n      console.error(\"Error fetching access token:\", errorDetails);\r\n      throw new Error(\"Failed to retrieve access token\");\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data.access_token;\r\n  } catch (error) {\r\n    console.error(\"Error getting access token:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchFromSpotify = async (endpoint, token) => {\r\n  const response = await fetch(`https://api.spotify.com/v1${endpoint}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n  return response.json();\r\n};\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,QAAQ;AAE/B,MAAMC,SAAS,GAAG,kCAAkC;AACpD,MAAMC,aAAa,GAAG,kCAAkC;AACxD,MAAMC,YAAY,GAAG,gCAAgC;AACrD,MAAMC,MAAM,GAAG,CACb,mBAAmB,EACnB,iBAAiB,EACjB,eAAe,EACf,uBAAuB,EACvB,wBAAwB,EACxB,yBAAyB,EACzB,mBAAmB,EACnB,qBAAqB,CACtB;AAED,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAC9B,OACE,yCAAyC,GACzC,aAAaJ,SAAS,GAAG,GACzB,qBAAqB,GACrB,gBAAgBK,kBAAkB,CAACH,YAAY,CAAC,GAAG,GACnD,SAASG,kBAAkB,CAACF,MAAM,CAACG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;AAEnD,CAAC;AAED,OAAO,MAAMC,cAAc,GAAG,MAAOC,IAAI,IAAK;EAC5C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;MACrEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,mCAAmC;QACnDC,aAAa,EACX,QAAQ,GACRd,MAAM,CAACe,IAAI,CAACd,SAAS,GAAG,GAAG,GAAGC,aAAa,CAAC,CAACc,QAAQ,CAAC,QAAQ;MAClE,CAAC;MACDC,IAAI,EAAE,sCAAsCR,IAAI,iBAAiBH,kBAAkB,CACjFH,YACF,CAAC;IACH,CAAC,CAAC;IAEF,IAAI,CAACO,QAAQ,CAACQ,EAAE,EAAE;MAChB,MAAMC,YAAY,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAC1CC,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEH,YAAY,CAAC;MAC3D,MAAM,IAAII,KAAK,CAAC,iCAAiC,CAAC;IACpD;IAEA,MAAMC,IAAI,GAAG,MAAMd,QAAQ,CAACU,IAAI,CAAC,CAAC;IAClC,OAAOI,IAAI,CAACC,YAAY;EAC1B,CAAC,CAAC,OAAOH,KAAK,EAAE;IACdD,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMI,gBAAgB,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,KAAK,KAAK;EACzD,MAAMlB,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6BgB,QAAQ,EAAE,EAAE;IACpEd,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUc,KAAK;IAChC;EACF,CAAC,CAAC;EACF,OAAOlB,QAAQ,CAACU,IAAI,CAAC,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}