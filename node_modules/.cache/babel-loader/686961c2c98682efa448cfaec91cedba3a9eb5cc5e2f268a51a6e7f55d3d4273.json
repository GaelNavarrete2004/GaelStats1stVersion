{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gael1\\\\OneDrive\\\\Desktop\\\\spotify-stats\\\\src\\\\components\\\\Recently Played\\\\RecentlyPlayed.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchFromSpotify } from '../../spotifyAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RecentlyPlayed({\n  token\n}) {\n  _s();\n  const [recentTracks, setRecentTracks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [previewAudio, setPreviewAudio] = useState(null);\n  useEffect(() => {\n    fetchAllRecentTracks();\n  }, [token]);\n\n  // Fetch all tracks with pagination\n  const fetchAllRecentTracks = async () => {\n    setLoading(true);\n    let allTracks = [];\n    let nextUrl = '/me/player/recently-played?limit=50';\n    try {\n      while (nextUrl) {\n        var _data$next;\n        const data = await fetchFromSpotify(nextUrl, token);\n        allTracks = [...allTracks, ...data.items];\n        nextUrl = ((_data$next = data.next) === null || _data$next === void 0 ? void 0 : _data$next.replace('https://api.spotify.com/v1', '')) || null;\n      }\n      setRecentTracks(allTracks);\n    } catch (error) {\n      console.error('Error fetching recent tracks:', error);\n      setRecentTracks([]);\n    }\n    setLoading(false);\n  };\n\n  // Play preview when hovering\n  const playPreview = previewUrl => {\n    if (previewUrl) {\n      const audio = new Audio(previewUrl);\n      audio.play();\n      setPreviewAudio(audio);\n    }\n  };\n\n  // Stop preview on hover out\n  const stopPreview = () => {\n    if (previewAudio) {\n      previewAudio.pause();\n      setPreviewAudio(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-8 bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900 text-white rounded-lg shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-4xl font-extrabold mb-6 text-center\",\n      children: \"Recently Played\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-lg\",\n      children: \"Loading recently played songs...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : recentTracks.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\",\n      children: recentTracks.map(({\n        track\n      }, index) => {\n        var _track$album$images$;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"bg-gray-800 p-4 rounded shadow-md transform transition-transform duration-300 hover:scale-105\",\n          onMouseEnter: () => playPreview(track.preview_url),\n          onMouseLeave: stopPreview,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: (_track$album$images$ = track.album.images[1]) === null || _track$album$images$ === void 0 ? void 0 : _track$album$images$.url,\n              alt: track.name,\n              className: \"w-full rounded mb-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-lg font-bold truncate\",\n            children: track.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-400 truncate\",\n            children: [\"Artist: \", track.artists[0].name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-500 truncate\",\n            children: [\"Album: \", track.album.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, track.id + index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-lg\",\n      children: \"No recent songs found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(RecentlyPlayed, \"XCNxe6CnDxaI07WIke4/DD496xo=\");\n_c = RecentlyPlayed;\nvar _c;\n$RefreshReg$(_c, \"RecentlyPlayed\");","map":{"version":3,"names":["React","useState","useEffect","fetchFromSpotify","jsxDEV","_jsxDEV","RecentlyPlayed","token","_s","recentTracks","setRecentTracks","loading","setLoading","previewAudio","setPreviewAudio","fetchAllRecentTracks","allTracks","nextUrl","_data$next","data","items","next","replace","error","console","playPreview","previewUrl","audio","Audio","play","stopPreview","pause","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","track","index","_track$album$images$","onMouseEnter","preview_url","onMouseLeave","src","album","images","url","alt","name","artists","id","_c","$RefreshReg$"],"sources":["C:/Users/gael1/OneDrive/Desktop/spotify-stats/src/components/Recently Played/RecentlyPlayed.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchFromSpotify } from '../../spotifyAuth';\r\n\r\nexport default function RecentlyPlayed({ token }) {\r\n  const [recentTracks, setRecentTracks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [previewAudio, setPreviewAudio] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchAllRecentTracks();\r\n  }, [token]);\r\n\r\n  // Fetch all tracks with pagination\r\n  const fetchAllRecentTracks = async () => {\r\n    setLoading(true);\r\n    let allTracks = [];\r\n    let nextUrl = '/me/player/recently-played?limit=50';\r\n\r\n    try {\r\n      while (nextUrl) {\r\n        const data = await fetchFromSpotify(nextUrl, token);\r\n        allTracks = [...allTracks, ...data.items];\r\n        nextUrl = data.next?.replace('https://api.spotify.com/v1', '') || null;\r\n      }\r\n      setRecentTracks(allTracks);\r\n    } catch (error) {\r\n      console.error('Error fetching recent tracks:', error);\r\n      setRecentTracks([]);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  // Play preview when hovering\r\n  const playPreview = (previewUrl) => {\r\n    if (previewUrl) {\r\n      const audio = new Audio(previewUrl);\r\n      audio.play();\r\n      setPreviewAudio(audio);\r\n    }\r\n  };\r\n\r\n  // Stop preview on hover out\r\n  const stopPreview = () => {\r\n    if (previewAudio) {\r\n      previewAudio.pause();\r\n      setPreviewAudio(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-8 bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900 text-white rounded-lg shadow-lg\">\r\n      <h2 className=\"text-4xl font-extrabold mb-6 text-center\">Recently Played</h2>\r\n      {loading ? (\r\n        <p className=\"text-center text-lg\">Loading recently played songs...</p>\r\n      ) : recentTracks.length > 0 ? (\r\n        <ul className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {recentTracks.map(({ track }, index) => (\r\n            <li\r\n              key={track.id + index}\r\n              className=\"bg-gray-800 p-4 rounded shadow-md transform transition-transform duration-300 hover:scale-105\"\r\n              onMouseEnter={() => playPreview(track.preview_url)}\r\n              onMouseLeave={stopPreview}\r\n            >\r\n              <div className=\"relative\">\r\n                <img\r\n                  src={track.album.images[1]?.url}\r\n                  alt={track.name}\r\n                  className=\"w-full rounded mb-4\"\r\n                />\r\n              </div>\r\n              <p className=\"text-lg font-bold truncate\">{track.name}</p>\r\n              <p className=\"text-gray-400 truncate\">Artist: {track.artists[0].name}</p>\r\n              <p className=\"text-gray-500 truncate\">Album: {track.album.name}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p className=\"text-center text-lg\">No recent songs found.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}